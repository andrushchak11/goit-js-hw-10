{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\r\nimport 'flatpickr/dist/flatpickr.min.css';\r\n\r\nimport iziToast from 'izitoast';\r\nimport 'izitoast/dist/css/iziToast.min.css';\r\n\r\nconst inputDatePicker = document.querySelector('#datetime-picker');\r\nconst btnDateStart = document.querySelector('.timer-start');\r\nconst days = document.querySelector('[data-days]');\r\nconst hours = document.querySelector('[data-hours]');\r\nconst minutes = document.querySelector('[data-minutes]');\r\nconst seconds = document.querySelector('[data-seconds]');\r\n\r\nlet timerInterval = null;\r\nlet userSelectedDate = null;\r\n\r\nflatpickr(inputDatePicker, {\r\n  enableTime: true,\r\n  time_24hr: true,\r\n  defaultDate: new Date(),\r\n  minuteIncrement: 1,\r\n  onClose(selectedDates) {\r\n    userSelectedDate = selectedDates[0];\r\n\r\n    if (userSelectedDate <= new Date()) {\r\n      btnDateStart.disabled = true;\r\n\r\n      iziToast.error({\r\n        title: 'Error',\r\n        message: 'Please choose a date in the future',\r\n      });\r\n    } else {\r\n      btnDateStart.disabled = false;\r\n\r\n      iziToast.success({\r\n        title: 'Success',\r\n        message: 'Valid date selected!',\r\n      });\r\n    }\r\n  },\r\n});\r\n\r\nfunction convertMs(ms) {\r\n  const second = 1000;\r\n  const minute = second * 60;\r\n  const hour = minute * 60;\r\n  const day = hour * 24;\r\n\r\n  const days = Math.floor(ms / day);\r\n  const hours = Math.floor((ms % day) / hour);\r\n  const minutes = Math.floor(((ms % day) % hour) / minute);\r\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\r\n\r\n  return { days, hours, minutes, seconds };\r\n}\r\n\r\nfunction addLeadingZero(value) {\r\n  return String(value).padStart(2, '0');\r\n}\r\n\r\nbtnDateStart.addEventListener('click', () => {\r\n  btnDateStart.disabled = true;\r\n  inputDatePicker.disabled = true;\r\n\r\n  intervalBack = setInterval(() => {\r\n    const nowDate = new Date();\r\n    const timeResult = userSelectedDate - nowDate;\r\n\r\n    if (timeResult <= 0) {\r\n      clearInterval(intervalBack);\r\n      iziToast.success({\r\n        title: 'Timer Ended',\r\n        message: 'The countdown has finished!',\r\n      });\r\n      inputDatePicker.disabled = false;\r\n      return;\r\n    }\r\n\r\n    const time = convertMs(timeResult);\r\n\r\n    days.textContent = addLeadingZero(time.days);\r\n    hours.textContent = addLeadingZero(time.hours);\r\n    minutes.textContent = addLeadingZero(time.minutes);\r\n    seconds.textContent = addLeadingZero(time.seconds);\r\n  }, 1000);\r\n});\r\n"],"names":["inputDatePicker","btnDateStart","days","hours","minutes","seconds","userSelectedDate","flatpickr","selectedDates","iziToast","convertMs","ms","addLeadingZero","value","timeResult","time"],"mappings":"+IAMA,MAAMA,EAAkB,SAAS,cAAc,kBAAkB,EAC3DC,EAAe,SAAS,cAAc,cAAc,EACpDC,EAAO,SAAS,cAAc,aAAa,EAC3CC,EAAQ,SAAS,cAAc,cAAc,EAC7CC,EAAU,SAAS,cAAc,gBAAgB,EACjDC,EAAU,SAAS,cAAc,gBAAgB,EAGvD,IAAIC,EAAmB,KAEvBC,EAAUP,EAAiB,CACzB,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQQ,EAAe,CACrBF,EAAmBE,EAAc,CAAC,EAE9BF,GAAoB,IAAI,MAC1BL,EAAa,SAAW,GAExBQ,EAAS,MAAM,CACb,MAAO,QACP,QAAS,oCACjB,CAAO,IAEDR,EAAa,SAAW,GAExBQ,EAAS,QAAQ,CACf,MAAO,UACP,QAAS,sBACjB,CAAO,EAEJ,CACH,CAAC,EAED,SAASC,EAAUC,EAAI,CAMrB,MAAMT,EAAO,KAAK,MAAMS,EAAK,KAAG,EAC1BR,EAAQ,KAAK,MAAOQ,EAAK,MAAO,IAAI,EACpCP,EAAU,KAAK,MAAQO,EAAK,MAAO,KAAQ,GAAM,EACjDN,EAAU,KAAK,MAASM,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAT,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASO,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAEAZ,EAAa,iBAAiB,QAAS,IAAM,CAC3CA,EAAa,SAAW,GACxBD,EAAgB,SAAW,GAE3B,aAAe,YAAY,IAAM,CAE/B,MAAMc,EAAaR,EADH,IAAI,KAGpB,GAAIQ,GAAc,EAAG,CACnB,cAAc,YAAY,EAC1BL,EAAS,QAAQ,CACf,MAAO,cACP,QAAS,6BACjB,CAAO,EACDT,EAAgB,SAAW,GAC3B,MACD,CAED,MAAMe,EAAOL,EAAUI,CAAU,EAEjCZ,EAAK,YAAcU,EAAeG,EAAK,IAAI,EAC3CZ,EAAM,YAAcS,EAAeG,EAAK,KAAK,EAC7CX,EAAQ,YAAcQ,EAAeG,EAAK,OAAO,EACjDV,EAAQ,YAAcO,EAAeG,EAAK,OAAO,CAClD,EAAE,GAAI,CACT,CAAC"}